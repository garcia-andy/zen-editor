[workspace.package]
version = "0.0.1"
edition = "2021"
description = "The iced-rs code editor."
publish = true
authors = ["Andy Garcia <agf030124@gmail.com>"]
license-file = "LICENSE"
readme = "README.md"
homepage = "https://github.com/agf030124/zen-editor"
repository = "https://github.com/agf030124/zen-editor"

[package]
name = "zen"
version.workspace = true
edition.workspace = true
description.workspace = true
publish.workspace = true
authors.workspace = true
license-file.workspace = true
readme.workspace = true
homepage.workspace = true
repository.workspace = true

[package.metadata.wix]
upgrade-guid = "FE64A90E-770F-4E80-A629-8CA0C0EB5D35"
path-guid = "FF2F5345-F3D5-40C7-BCD6-5999089503ED"
license = false
eula = false

[workspace]
resolver = "2"
members = [ "crates/editor", "crates/registers", "crates/top_menu", "crates/ui", "crates/zen_core"]


[workspace.metadata.bundle]
identifier = "com.github.agf030124.zen"
copyright = "Copyright Â© 2023 Andy Garcia"

[workspace.dependencies]
iced = {version = "0.13.1", features = ["advanced", "canvas", "highlighter", "image", "lazy", "markdown", "multi-window", "qr_code", "smol", "svg", "web-colors"]}
inline_tweak = { version = "1.1.1", features = ["derive"] }
rfd = "0.15.0"
iced_aw = "0.11.0"
chrono = "0.4.38"
zen_core = { path = "crates/zen_core" }

[dependencies]
iced.workspace = true
iced_aw.workspace = true
zen_core.workspace = true

[profile.release]
debug = "limited"
lto = "thin"
codegen-units = 1

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[workspace.lints.clippy]
dbg_macro = "deny"
todo = "deny"
single_range_in_vec_init = "allow"
style = { level = "allow", priority = -1 }
module_inception = { level = "deny" }
question_mark = { level = "deny" }
redundant_closure = { level = "deny" }
type_complexity = "allow"
new_ret_no_self = { level = "allow" }
should_implement_trait = { level = "allow" }

[workspace.metadata.cargo-machete]
ignored = ["bindgen", "cbindgen", "prost_build", "serde"]

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.22.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = true
